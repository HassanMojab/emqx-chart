apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: {{ include "emqx.fullname" . }}
  namespace: {{ .Values.namespace }}
  labels:
    app.kubernetes.io/name: {{ include "emqx.name" . }}
    helm.sh/chart: {{ include "emqx.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: {{ .Values.deployment.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "emqx.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "emqx.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      {{ if .Values.apiserverToken  }}
      volumes:
      - name: apiserver-token
        secret:
           secretName: apiserver-token
      {{ end }}
      containers:
        - name: emqx
          image: {{ .Values.deployment.image}}
          imagePullPolicy: {{ .Values.deployment.imagePullPolicy }}
          ports:
          - containerPort: 1883
          - containerPort: 8883
          - containerPort: 8080
          - containerPort: 8083
          - containerPort: 8084
          - containerPort: 18083
          envFrom:
            - configMapRef:
                name: {{ include "emqx.fullname" . }}-env 
          env:
          - name: EMQX_NAME
            value: emqx 
          - name: EMQX_CLUSTER__K8S__APP_NAME
            value: emqx 
          - name: EMQX_CLUSTER__DISCOVERY
            value: k8s 
          - name: EMQX_CLUSTER__K8S__SERVICE_NAME
            value: {{ include "emqx.fullname" . }}
          - name: EMQX_CLUSTER__K8S__APISERVER
            value: {{ .Values.apiserver }} 
          - name: EMQX_CLUSTER__K8S__NAMESPACE
            value: {{ .Values.namespace }}
          - name: EMQX_CLUSTER__K8S__ADDRESS_TYPE
            value: ip
          tty: true
          {{ if .Values.apiserverToken  }}
          volumeMounts:
          - name: apiserver-token
            mountPath: "/var/run/secrets/kubernetes.io/serviceaccount"
            readOnly: true
          {{ end }}